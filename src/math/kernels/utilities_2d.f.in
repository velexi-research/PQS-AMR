c***********************************************************************
c
c utilities_2d.f
c
c F77 routines for math utility functions
c
c***********************************************************************

c***********************************************************************
c
c Compute max norm of the difference between 'u' and 'v'.
c
c Parameters
c ----------
c u: first function in the expression |u - v|
c
c v: second function in the expression |u - v|
c
c patch_box_lo: lower corner of index range for patch box
c
c patch_box_hi: upper corner of index range for patch box
c
c *_gb_lo: lower corner of index range for ghost box
c
c *_gb_hi: upper corner of index range for ghost box
c
c Return value
c ------------
c max norm of (u - v)
c
c***********************************************************************
      @REAL@ function pqsMath2dMaxNormDiff(
     &  u,
     &  u_gb_lo, u_gb_hi,
     &  v,
     &  v_gb_lo, v_gb_hi,
     &  patch_box_lo, patch_box_hi)
***********************************************************************
c { begin function
      implicit none

      integer u_gb_lo(1:2), u_gb_hi(1:2)
      @REAL@ u(u_gb_lo(1):u_gb_hi(1),
     &         u_gb_lo(2):u_gb_hi(2))

      integer v_gb_lo(1:2), v_gb_hi(1:2)
      @REAL@ v(v_gb_lo(1):v_gb_hi(1),
     &         v_gb_lo(2):v_gb_hi(2))

      integer patch_box_lo(1:2), patch_box_hi(1:2)

      integer i, j
      @REAL@ max_norm

c     initialize max_norm to zero
      max_norm = 0.0d0

c     loop over patch box {
      do j=patch_box_lo(2),patch_box_hi(2)
        do i=patch_box_lo(1),patch_box_hi(1)

          if (max_norm .lt. abs(u(i,j) - v(i,j))) then
            max_norm = abs(u(i,j) - v(i,j))
          endif

        enddo
      enddo
c     } end loop over patch box

c     set result
      pqsMath2dMaxNormDiff = max_norm

      return
      end
c } end function
