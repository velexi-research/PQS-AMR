/* \file pqs-amr-sample-2d.conf
 *
 * \brief
 * Sample input file for 2D PQS AMR simulation.
 */

// Base name for output files.
base_name = "PQS-AMR-2D"

// Whether to log all nodes in a parallel run.
log_all_nodes = TRUE

// Restart parameters
restart_interval = 100

// Visualization parameters
enable_viz = TRUE
viz_write_interval = 25
viz_num_procs_per_file = 1

PQS {
    // Physical parameters
    initial_curvature = 0.5

    // Numerical method parameters
    lsm_spatial_derivative_type = "ENO1"
    time_integration_order = 1

    // Level set method parameters
    lsm_t_max = 1.0
    lsm_max_iterations = 5
    lsm_min_delta_phi = 0.1
    lsm_min_delta_saturation = 0.1

    reinitialization_interval  = 5
    reinitialization_max_iters = 0
    reinitialization_stop_dist = 0.5

    Algorithms {
        SlightlyCompressibleModel {
            reference_pressure = 1
            target_volume = 1
            surface_tension = 1
            bulk_modulus = 1
        } // SlightlyCompressibleModel
    } // Algorithms

} // PQS

InterfaceInitModule {
    // interface_type = "circle"
    interface_type = "starfish"
    center = 0, 0
    radius = 0.5
} // InterfaceInitModule

SAMRAI {
    Geometry {
        // Problem dimension
        dim = 2

        //  Specify lower/upper corners of the computational domain and a
        //  set of non-overlapping boxes defining domain interior.  If union
        //  of boxes is not a parallelpiped, lower/upper corner data corresponds
        //  to min/max corner indices over all boxes given.
        //  x_lo  -- (double array) lower corner of computational domain [REQD]
        //  x_up  -- (double array) upper corner of computational domain [REQD]
        //  domain_boxes  -- (box array) set of boxes that define interior of
        //                   hysical domain. [REQD]
        //  periodic_dimension -- (int array) coordinate directions in which
        //                        domain is periodic.  Zero indicates not
        //                        periodic, non-zero value indicates
        //                        periodicity. [0]
        domain_boxes = [(0,0), (99,99)]
        x_lo         = -1, -1
        x_up         = 1, 1

        periodic_dimension = 1, 1
    } // Geometry

    PatchHierarchy {
        // Maximum number of levels in PatchHierarchy
        max_levels = 1  // TODO: increase after cell tagging is implemented

        ratio_to_coarser {
            level_1            = 2, 2
            // all finer levels will use same values as level_1
        }

        largest_patch_size {
            level_0 = 50, 50
            // all finer levels will use same values as level_0
        }
    } // PatchHierarchy

    BoxGenerator {
        // the default load balancer input parameters are usually sufficient
    }

    LoadBalancer {
        // the default load balancer input parameters are usually sufficient
    }

    GriddingAlgorithm {
    }

} // SAMRAI
